# Generated by Django 5.2.5 on 2025-08-28 18:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0001_initial'),
        ('lists', '0001_initial'),
        ('tags', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título da tarefa (máximo 200 caracteres)', max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, help_text='Descrição detalhada da tarefa', verbose_name='Descrição')),
                ('due_date', models.DateTimeField(blank=True, help_text='Data e hora limite para conclusão da tarefa', null=True, verbose_name='Data Limite')),
                ('completed', models.BooleanField(default=False, help_text='Indica se a tarefa foi concluída', verbose_name='Concluída')),
                ('priority', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta')], default='medium', help_text='Nível de prioridade da tarefa', max_length=10, verbose_name='Prioridade')),
                ('reminder', models.DateTimeField(blank=True, help_text='Data e hora para lembrete da tarefa', null=True, verbose_name='Lembrete')),
                ('estimated_duration', models.DurationField(blank=True, help_text='Tempo estimado para conclusão da tarefa', null=True, verbose_name='Duração Estimada')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('completed_at', models.DateTimeField(blank=True, help_text='Data e hora de conclusão da tarefa', null=True, verbose_name='Concluído em')),
                ('category', models.ForeignKey(blank=True, help_text='Categoria da tarefa (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='categories.category', verbose_name='Categoria')),
                ('tags', models.ManyToManyField(blank=True, help_text='Etiquetas associadas à tarefa', related_name='tasks', to='tags.tag', verbose_name='Etiquetas')),
                ('task_list', models.ForeignKey(blank=True, help_text='Lista à qual a tarefa pertence (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='lists.tasklist', verbose_name='Lista')),
                ('user', models.ForeignKey(help_text='Usuário proprietário da tarefa', on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Tarefa',
                'verbose_name_plural': 'Tarefas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subtask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Título da subtarefa (máximo 200 caracteres)', max_length=200, verbose_name='Título')),
                ('completed', models.BooleanField(default=False, help_text='Indica se a subtarefa foi concluída', verbose_name='Concluída')),
                ('order', models.PositiveIntegerField(default=0, help_text='Ordem de exibição da subtarefa', verbose_name='Ordem')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Concluído em')),
                ('task', models.ForeignKey(help_text='Tarefa à qual a subtarefa pertence', on_delete=django.db.models.deletion.CASCADE, related_name='subtasks', to='tasks.task', verbose_name='Tarefa')),
            ],
            options={
                'verbose_name': 'Subtarefa',
                'verbose_name_plural': 'Subtarefas',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion_date', models.DateTimeField(auto_now_add=True, verbose_name='Data de Conclusão')),
                ('estimated_duration', models.DurationField(blank=True, help_text='Tempo estimado que foi definido para a tarefa', null=True, verbose_name='Duração Estimada')),
                ('actual_duration', models.DurationField(blank=True, help_text='Tempo real gasto na tarefa', null=True, verbose_name='Duração Real')),
                ('notes', models.TextField(blank=True, help_text='Observações sobre a conclusão da tarefa', verbose_name='Observações')),
                ('task', models.OneToOneField(help_text='Tarefa à qual o histórico se refere', on_delete=django.db.models.deletion.CASCADE, related_name='history', to='tasks.task', verbose_name='Tarefa')),
            ],
            options={
                'verbose_name': 'Histórico de Tarefa',
                'verbose_name_plural': 'Históricos de Tarefas',
                'ordering': ['-completion_date'],
            },
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', 'completed'], name='tasks_task_user_id_f226ed_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', 'due_date'], name='tasks_task_user_id_075050_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', 'priority'], name='tasks_task_user_id_13ec9e_idx'),
        ),
    ]
